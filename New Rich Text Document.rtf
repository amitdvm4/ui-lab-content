{\rtf1\ansi\deff0\nouicompat{\fonttbl{\f0\fnil\fcharset0 Calibri;}{\f1\fnil Calibri;}}
{\*\generator Riched20 6.3.9600}\viewkind4\uc1 
\pard\sa200\sl276\slmult1\f0\fs22\lang9 Frequently Asked Questions regarding Placements\par
Below are some of the most frequently asked questions regarding placements and interviews:\par
\par
Is competitive programming enough for placements?\par
Competitive Programming plays a very important role in boosting problem-solving skills and ability to perform under time pressure. But obviously, it is not at all enough to get you prepared from placement perspective. This is because companies focus on core data structures and algorithm concepts along with other important CS subjects. You need to have a good grasp of concepts with good problem-solving abilities (as you are required to solve some of the real-life problems during your job), good coding practice.\par
Does writing clean code increases the chance of getting selected?\par
Writing clean code surely creates a good impression of you in front of the recruiter. Recruiters always prefer someone who can write code which is easily understandable and should also be efficient at the same time.\par
How should I prepare for whiteboard interviews?\par
You can practice for Whiteboard coding interview rounds with your friends and colleagues. You can ask your friend to discuss different corner cases of any problem on the whiteboard. This will help you in writing code on the whiteboard parallelly covering different cases. It showcases not only your coding skill but also your presentation skills.\par
What programming languages should I learn?\par
You can learn as many programming languages you want but make sure to master at least any one programming language of your choice. Recruiters only see whether you are able to code a given problem in any language of your choice (C, C++, Java etc.). We recommend you to master any one structured programming language like C and any one of the Object Oriented Programming language like C++, Java etc.\par
Should I mention my competitive profiles in Resume?\par
If you have a good competitive profile then we recommend you to mention it in your resume. This does not mean that recruiters only look for competitive programmers but if you have a good competitive profile then it also reflects that you have good problem-solving abilities. So, if you do not have a good competitive profile then it does not decrease the chance of your selection in any sense at all. All you need is to show the recruiter that you have a good problem-solving ability.\par
How much projects are important to be added in resume?\par
Projects add a pinch of salt to your resume. Try to add 2-3 good projects with somehow description of 1-2 lines. Also, be prepared to deliver detail description of your project and also some of the corner scenarios your project should handle. While applying off-campus, try to include projects according to the technology on which company has vacancies because many companies have a resume filtering option. That is when you apply for a vacancy on their website your resume passes through an initial keyword matching process before it reaches to the hiring team.\par
How should I use GeeksforGeeks for placement preparation?\par
Practice core Data Structures like Stack, Queue, Linked List, Tree, Heap, Graph are few DS which is very common and you should know ins and outs of them irrespective of company you are targeting. Start these topics in the order we have mentioned. Solve few questions of each and then you will start observing patterns. For example, Most of the tree questions boils down to solving it in three parts, Solve left subtree, solve right subtree, combine the results.\par
Problem solving: Based on some interview experiences, we found that Problem solving and strong coding skills are the two major areas top MNCs look for. You know DS and coding. Great! But how and where to use these are more important. Here comes the Algorithms part. So go for practicing below topics:\par
Divide and Conquer Archives \f1\endash  GeeksforGeeks\par
Greedy Algorithm Archives \endash  GeeksforGeeks\par
Backtracking Archives \endash  GeeksforGeeks\par
Dynamic Programming Archives \endash  GeeksforGeeks\par
Pattern Searching Archives \endash  GeeksforGeeks\par
Out of all, Dynamic Programming is one of the toughest topic which is most challenging to master upon. And also you should expect to face at least one DP problem in each round of Tech Giants (specially in Google) interview.\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
MAQ Software most Frequently Asked Questions\par
Algorithmic Problems:\par
\par
Detect a loop in a linked list\par
Print matrix in a spiral order \endash  Practice here\par
Snake-Ladder problem\par
N-queen problem for 8 queens\par
Reverse a string wordwise \endash  Practice here\par
key and lock problem \endash  Practice here\par
Serialize and Deserialize a Binary Tree \endash  Practice here\par
Wap to print all permutations of a given string \endash  Practice here\par
Maximum area of a histogram \endash  Practice here\par
Given a number, generate all prime numbers till that number \endash  Practice here\par
Sort an array of 0s, 1s, 2s \endash  Practice here\par
Nth fibonacci number \endash  Practice here\par
Find Middle element of Linked List \endash  Practice here\par
Check if a linked list is Circular Linked List \endash  Practice here\par
Others Subjects:\par
\par
SQL queries\par
Basic Java concepts\par
Indexing in DBMS\par
B-tree and B+ Tree\par
BST\par
Deadlock\par
Mutex and Semaphores\par
Aptitude:\par
\par
\par
\par
 \par
\par
Time and work\par
Pipes and Cisterns\par
Calendar Dates\par
Common puzzles\par
Speed and Distances\par
Please write comments if you find anything incorrect, or you want to share more information about the topic discussed above\par
\par
\par
\par
\par
\par
\par
Amazon\rquote s most frequently asked interview questions | Set 2\par
Amazon\rquote s Most Frequently Asked Questions | Set 1\par
\par
Level \endash  Easy\par
\par
Get minimum element from stack \endash  Practice here\par
Serialize and deserialize a binary tree \endash  Practice here\par
Print a binary tree in a vertical order \endash  Practice here\par
Celebrity problem \endash  Practice here\par
Level order traversal\par
Swap the kth element from starting and from the end position \endash  Practice here\par
Binary tree to bst \endash  Practice here\par
Max sum in the configuration \endash  Practice here\par
Find the nth element of spiral matrix \endash  Practice here\par
Count the number of occurrences in a sorted array\par
Find the smallest window in a string containing all characters of another string\par
Find the maximum of all subarrays of size k\par
Find the kth smallest element in row wise and column wise sorted matrix\par
Minimum swaps required to arrange pairs\par
There is an array of N numbers ranging from 1 to N. Only 1 number is missing, return the index of that number\par
Find the second largest and second smallest in a given array in single traversal.\par
Find power(x,y) without using pow function.(divide and conquer approach required)\par
Count possible decoding sequence\par
Level \endash  Medium\par
\par
\par
\par
 \par
\par
Given two string print them inter leaving strings characters\par
Minimum cost required to travel from top left to the bottom right in a matrix\par
Maximum difference between node and its ancestors \endash  Practice here\par
Min distance between two given nodes of a binary tree \endash  Practice here\par
Find the number of island \endash  Practice here\par
Topological Sort \endash  Practice here\par
Detect cycle in a directed graph \endash  Practice here\par
Flattening a link list \endash  Practice here\par
Detect a loop in a linked list \endash  Practice here\par
Check if a binary tree is BST or not\par
Min Cost path\par
Count ways to reach nth stair\par
Maximum Subarray Problem\par
Palindrome Partitioning\par
Given a binary tree find the minimum root to leaf height.\par
Implement LRU cache\par
Level \endash  Hard\par
\par
Boolean paranthesis \endash  Practice here\par
Maximum Index \endash  Practice here\par
Largest Number formed in the array \endash  Practice here\par
Find the length of maximum numbers of consecutive numbers jumped up in an array\par
Delete the elements in a linklist whose sum is equal to zero\par
Given a list of numbers of odd length design an algorithm to remove a number and divide the rest numbers equaly so as it makes there sum same\par
Find diameter of a binary tree\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
Infosys\rquote s most asked interview questions\par
1) Tell me about yourself.\par
\par
2) About projects, role in project.\par
\par
3) Why do you want to join Infosys?\par
\par
\par
\par
 \par
\par
4) Strategy to handle major project\par
\par
5) What is your career objective?\par
\par
6) Are you fine with working in night shifts?\par
\par
7) Why should we hire you?\par
\par
8) They may ask about your family background also.\par
\par
This is a small list of questions. Please write comments to add more questions to help other geeks.\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
How to attempt Function Coding Questions?\par
Function Coding Questions are similar to normal coding questions apart from the fact that one does not need to read input and print output from standard I/O while writing solutions.\par
\par
In function coding question, one just needs to complete a function already written in the code editor. You need to work on inputs provided as a parameter to this function and instead of printing the result you will have to return it from the function.\par
\par
Let\rquote s take the example of a sample function problem: Equilibrium Index of an Array. The pattern of question is almost the same as that of normal programming questions. In function problems, you can notice an additional information provided as \ldblquote Task\rdblquote  after the output format which clearly explains that the user only needs to complete a function and return the result from it.\par
\par
\par
\par
 \par
\par
\par
You can also see that in the code editor for this question there is already a function written with name findEquilibrium().\par
\par
\par
This function accepts an array A[] and an integer n which denotes the size of the array A[]. You can see in the above image that the body of this function is empty. You need to write your complete code inside the body of this function and return the result from it without writing a separate main() function. You must assume that there is already a main() function written which is invoking this function and write your program accordingly.\par
\par
Below is the complete working solution for the above question:\par
\par
filter_none\par
brightness_4\par
/*Please note that it's Function problem i.e. \par
you need to write your solution in the form of Function(s) only. \par
Driver Code to call/invoke your function is mentioned above.*/\par
  \par
/* You are required to complete this method*/\par
int findEquilibrium(int A[], int n) \par
\{ \par
    // Your code here \par
    int i, y, f, j, x; \par
    for (i = 1; i < n; i++) \{ \par
        y = 0; \par
        x = 0; \par
        for (j = 0; j < i; j++) \{ \par
            y = y + A[j]; \par
        \} \par
        for (j = i + 1; j < n; j++) \{ \par
            x = x + A[j]; \par
        \} \par
        if (x == y) \{ \par
            f = 1; \par
  \par
            // returning answer \par
            return (i); \par
            break; \par
        \} \par
        else \{ \par
            f = 0; \par
        \} \par
    \} \par
    if (f == 0) \{ \par
        // returning answer \par
        return (-1); \par
    \} \par
\} \par
Important things to remember\par
\par
One should assume that a main() function is already present which is invoking the current function and should not write a separate main() function.\par
Use inputs as provided in the function parameters.\par
Return result from the function instead of printing it.\par
\par
\par
\par
\par
\par
\par
\par
Must Do Coding Questions Company-wise\par
Topic :\par
\par
Google\par
Facebook\par
Microsoft\par
Adobe\par
Oracle\par
Amazon\par
D E Shaw\par
MAQ Software\par
Directi\par
Yahoo\par
Accolite\par
Walmart Labs\par
Samsung\par
Paytm\par
Ola Cabs\par
Flipkart\par
SAP Labs\par
VMware\par
Cisco\par
Goldman Sachs\par
MakeMyTrip\par
Snapdeal\par
Qualcomm\par
Payu\par
Intuit\par
Google :\par
\par
\par
\par
 \par
\par
Subarray with given sum\par
Maximum Index\par
Finding the numbers\par
Longest valid Parentheses\par
Jumping Numbers\par
Connect Nodes at Same Level\par
Count BST nodes that lie in a given range\par
Implement LRU Cache\par
Interleaved Strings\par
Find triplets with zero sum\par
Egg Dropping Puzzle\par
Word Break Problem\par
Check if a Binary Tree contains duplicate subtrees of size 2 or more\par
Find largest word in dictionary by deleting some characters of given string\par
Modular Exponentiation (Power in Modular Arithmetic)\par
Facebook :\par
\par
Subarray with given sum\par
Find all pairs with a given sum\par
Total Decoding Messages\par
Word Boggle\par
Activity Selection\par
Minimum Depth of a Binary Tree\par
Implement strstr\par
Multiply two strings\par
K-Palindrome\par
Find triplets with zero sum\par
Largest subset whose all elements are Fibonacci numbers\par
Look-and-Say Sequence\par
Converting Decimal Number lying between 1 to 3999 to Roman Numerals\par
Convert Ternary Expression to Binary Tree\par
Maximum Rectangular Area in a Histogram\par
Amazon :\par
\par
K largest elements from a big file or array\par
Reverse a Linked List in groups of given size\par
Implement a stack with push(), pop() and min() in O(1) time\par
Add two numbers represented by linked lists\par
Convert a Binary tree to DLL\par
Stock span problem\par
Next larger element\par
Edit distance\par
Maximum of all subarrays of size k\par
Pythagorean Triplet\par
Print a Binary Tree in Vertical Order\par
Level order traversal\par
Smallest window in a string containing all the characters of another string\par
Find the number of islands\par
Detect and Remove Loop in a Linked List\par
Check if a binary tree is BST or not\par
Boolean Parenthesization\par
Arrange given numbers to form the biggest number\par
Implement LRU Cache\par
Maximum difference between node and its ancestor in Binary Tree\par
Microsoft :\par
\par
Key Pair\par
Is Binary Number Multiple of 3\par
Kadane\rquote s Algorithm\par
Missing number in array\par
Majority Element\par
Search in a Rotated Array\par
Check for BST\par
Finding middle element in a linked list\par
Root to leaf path sum\par
Reverse a linked list\par
Remove every k\rquote th node\par
Merge 2 sorted linked list in reverse order\par
Longest Even Length Substring such that Sum of First and Second Half is same\par
k largest(or smallest) elements in an array | added Min Heap method\par
Write an Efficient Function to Convert a Binary Tree into its Mirror Tree\par
Determine if Two Trees are Identical\par
Adobe :\par
\par
Search in a Rotated Array\par
Subset Sum Problem\par
Reverse words in a given string\par
Sort an array of 0s, 1s and 2s\par
Minimum number of jumps\par
Check for BST\par
Root to leaf path sum\par
Sum Tree\par
Finding middle element in a linked list\par
Reverse a linked list\par
Level order traversal in spiral form\par
Right View of Binary Tree\par
Remove duplicate element from sorted Linked List\par
Merge Sort for Linked List\par
Count set bits in an integer\par
Oracle :\par
\par
0 \endash  1 Knapsack Problem\par
Search in a matrix\par
Power of 2\par
Palindrome\par
Root to leaf path sum\par
Kadane\rquote s Algorithm\par
Binary Search\par
Implement Queue using Linked List\par
Connect Nodes at Same Level\par
Remove loop in Linked List\par
Implement Stack using Queues\par
Implement Queue using Stacks\par
Remove duplicate element from sorted Linked List\par
Search in a row wise and column wise sorted matrix\par
Find the first repeating element in an array of integers\par
D E Shaw :\par
\par
Majority Element\par
Search in a Rotated Array\par
Sum of Middle Elements of two sorted arrays\par
Non Repeating Character\par
Kadane\rquote s Algorithm\par
Intersection of two sorted Linked lists\par
Detect Loop in linked list\par
Print all nodes that don\rquote t have sibling\par
Two Mirror Trees\par
Intersection Point in Y Shapped Linked Lists\par
Trie | (Insert and Search)\par
Implement Queue using Stacks\par
Implement Stack using Queues\par
Find the number of islands\par
Copy Set Bits in Range\par
Directi :\par
\par
Maximum of all subarrays of size k\par
Search in a matrix\par
Word Boggle\par
Jumping Numbers\par
Transform String\par
Solve the Sudoku\par
Find Nth root of M\par
Array Pair Sum Divisibility Problem\par
Largest zigzag sequence\par
Maximum Intervals Overlap\par
Max rectangle\par
Maximum path sum\par
Maximize Dot Product\par
Excel Sheet | Part \endash  1\par
Probability of Knight\par
MAQ Software :\par
\par
\par
\par
 \par
\par
Sort an array of 0s, 1s and 2s\par
Permutations of a given string\par
Rotate Array by n elements\par
Non Repeating Character\par
Nth Fibonacci Number\par
Finding middle element in a linked list\par
n\rquote th node from end of linked list\par
Detect Loop in linked list\par
Implement Queue using Stacks\par
Find Missing And Repeating\par
Find the Closest Element in BST\par
Check if a linked list is Circular Linked List\par
Reverse a String\par
Reverse words in a given string\par
Egg Dropping Puzzle\par
Yahoo :\par
\par
First non-repeating character in a stream\par
Find median in a stream\par
Largest prime factor\par
Form coils in a matrix\par
Word Boggle\par
Largest Product Palindrome\par
Surpasser Count\par
Return two prime numbers\par
Sort a stack\par
Three way partitioning\par
LRU Cache\par
Serialize and Deserialize a Binary Tree\par
Split a Circular Linked List into two halves\par
Interleaved Strings\par
Max Sum without Adjacents\par
Accolite :\par
\par
Count Squares\par
Longest Prefix Suffix\par
N-Queen Problem\par
Coin Change\par
Permutations of a given string\par
Stock buy and sell\par
Longest Palindrome in a String\par
Sum of two numbers represented as arrays\par
Max sum submatrix\par
Maximum sum Rectangle\par
Root to leaf path sum\par
Lowest Common Ancestor in a Binary Tree\par
Level order traversal in spiral form\par
Implement Stack using Queues\par
n\rquote th node from end of linked list\par
Walmart Labs :\par
\par
Longest consecutive subsequence\par
Largest number in K swaps\par
k largest elements\par
Word Break\par
Find the highest occurring digit in prime numbers in a range\par
Count all possible paths from top left to bottom right\par
Minimum Platforms\par
Parenthesis Checker\par
Implement LRU Cache\par
Josephus Problem\par
Top View of Binary Tree\par
Intersection of Two Linked Lists\par
Alien Dictionary\par
Remove Loop in Linked List\par
Wildcard Pattern Matching\par
Samsung :\par
\par
Longest Increasing Subsequence\par
Next larger element\par
Permutations of a given string\par
Next greater number set digits\par
Finding middle element in a linked list\par
Root to leaf path sum\par
Detect Loop in linked list\par
Left View of Binary Tree\par
Implement Queue using Linked List\par
Egg Dropping Puzzle\par
Total number of possible Binary Search Trees with n keys\par
Count number of bits to be flipped to convert A to B\par
Implement two stacks in an array\par
Given only a pointer/reference to a node to be deleted in a singly linked list, how do you delete it?\par
Paytm :\par
\par
Sort an array of 0s, 1s and 2s\par
Reverse words in a given string\par
Reverse a linked list\par
Reverse a Linked List in groups of given size\par
Max Sum without Adjacents\par
Mirror Tree\par
Flattening a Linked List\par
Check for Balanced Tree\par
Find the number of islands\par
Coin Change\par
Count frequencies of all elements in array in O(1) extra space and O(n) time\par
Convert array into Zig-Zag fashion\par
Find the row with maximum number of 1s\par
Maximum Rectangular Area in a Histogram\par
Ola Cabs :\par
\par
Kadane\rquote s Algorithm\par
Missing number in array\par
Sort an array of 0s, 1s and 2s\par
Search in a matrix\par
Left View of Binary Tree\par
Mirror Tree\par
Connect Nodes at Same Level\par
K distance from root\par
Level order traversal in spiral form\par
Non Repeating Character\par
Find the number of islands\par
Find the character in first string that is present at minimum index in second string\par
Maximum difference between two elements such that larger element appears after the smaller number\par
Find the element that appears once in sorted array\par
Boolean Matrix Problem\par
Flipkart :\par
\par
Kadane\rquote s Algorithm\par
0 \endash  1 Knapsack Problem\par
Inversion of array\par
Consecutive 1\rquote s not allowed\par
Finding middle element in a linked list\par
Get minimum element from stack\par
Left View of Binary Tree\par
Add two numbers represented by linked lists\par
Connect Nodes at Same Level\par
Sum of dependencies in a graph\par
Maximum of all subarrays of size k\par
Possible words from Phone digits\par
Reverse Level Order Traversal\par
Implement Queue using Stack\par
Maximum Width of Tree\par
SAP Labs :\par
\par
\par
\par
 \par
\par
Sort an array of 0s, 1s and 2s\par
Check if a number is Bleak\par
Reverse words in a given string\par
Remove Spaces from string\par
Second Largest\par
Check if a number is power of another number\par
Reverse a linked list\par
Get minimum element from stack\par
BFS traversal of graph\par
Find median in a stream of integers\par
Quick Sort\par
GCD of Array\par
LCM And GCD\par
Heap Sort\par
Bubble Sort\par
VMware :\par
\par
Longest Common Subsequence\par
Maximum Index\par
Array to BST\par
Egg Dropping Puzzle\par
K\rquote th smallest element\par
Check for BST\par
Finding middle element in a linked list\par
Reverse a linked list\par
Detect Loop in linked list\par
Run Length Encoding\par
Height of Binary Tree\par
Infix to Postfix\par
Diameter of Binary Tree\par
Mirror Tree\par
Boolean Matrix Problem\par
Cisco :\par
\par
Missing number in array\par
Reverse words in a given string\par
Permutations of a given string\par
Array to BST\par
Counbt set bits\par
Reverse a linked list\par
Level order traversal\par
Minimum Spanning Tree\par
Does array represent Heap\par
Kth largest element in a stream\par
Escape the jail\par
K\rquote th smallest element\par
Insertion Sort\par
Bubble Sort\par
Goldman Sachs :\par
\par
Reverse words in a given string\par
Overlapping rectangles\par
Column name from a given column number\par
Non Repeating Character\par
Total Decoding Messages\par
Sum Tree\par
Get minimum element from stack\par
Flattening a Linked List\par
Sort a stack using Recursion\par
Intersection Point in Y Shapped Linked Lists\par
Stock buy and sell\par
Egg Dropping Puzzle\par
Check for Balanced Tree\par
Check if two arrays are equal or not\par
Implement Queue using Stacks\par
MakeMyTrip :\par
\par
Distinct palindromic substrings\par
Two water Jug problem\par
Minimum Cost Path\par
Transpose of Matrix\par
Smallest window in a string containing all the characters of another string\par
Check Mirror in N-ary tree\par
Longest Prefix Suffix\par
Maximum Difference\par
Nuts and Bolts Problem\par
N meetings in one room\par
String formation from substring\par
Longest Common Subsequence\par
Next Permutation\par
Trailing zeroes in factorial\par
Egg Dropping Puzzle\par
Snapdeal :\par
\par
Fighting the darkness\par
Money Division\par
Group Anagrams Together\par
Pangram Strings\par
0 \endash  1 Knapsack Problem\par
Longest Arithmetic Progression\par
Next greater number set digits\par
Number of Coins\par
Check If two Line segments Intersect\par
Two numbers with sum closest to zero\par
Parenthesis Checker\par
Maximum Rectangular Area in a Histogram\par
Smallest Positive missing number\par
Find the number of islands\par
Reverse a Linked List in groups of given size\par
Qualcomm :\par
\par
Find length of Loop\par
Implement strstr\par
Min distance between two given nodes of a Binary Tree\par
Delete a node from BST\par
Left View of Binary Tree\par
Intersection Point in Y Shapped Linked Lists\par
Check for BST\par
Reverse a linked list\par
Detect Loop in linked list\par
Reverse Bits\par
Next Permutation\par
Array Subset of another array\par
Set Bits\par
Find Prime numbers in a range\par
Subsequence matching\par
Payu :\par
\par
Reverse each word in a given string\par
First non-repeating character in a stream\par
Next larger element\par
0 \endash  1 Knapsack Problem\par
Leaders in an array\par
Trapping Rain Water\par
Pattern Searching\par
Implement Atoi\par
Lowest Common Ancestor in a Binary Tree\par
Level order traversal in spiral form\par
Flattening a Linked List\par
Finding middle element in a linked list\par
Missing number in array\par
Kadane\rquote s Algorithm\par
Count possible ways to construct buildings\par
Intuit :\par
\par
Element with left side smaller and right side greater\par
Find median in a stream\par
Product array puzzle\par
Count Occurences of Anagrams\par
Maximum Sub Array\par
Binary Array Sorting\par
Sort a Stack\par
Find the number of islands\par
Remove duplicates from an unsorted linked list\par
Implement LRU Cache\par
Max Rectangle\par
Reverse a linked list\par
Pairwise swap elements of a linked list by swapping data\par
Find the missing no in string\par
Depth First Traversal for a Graph\par
Important Links :\par
\par
Difficulty-wise ordered Coding questions for Interview and Competitive Programming\par
Aptitude questions asked in round 1 : Placements Course designed for this purpose.\par
MCQs asked from different computer science subjects : Subject-Wise Quizzes\par
Interview theory and coding questions of all companies : Company wise all practice questions.\par
Interview experiences of all companies : Interview corner.\par
You may also check our latest online course series to learn DS & Algo is named DSA, which covers everything about Data Structures from Basic to Advanced.\par
\par
This is a 10 weeks long online certification program specializing in Data Structures & Algorithms which includes pre-recorded premium Video lectures & programming questions for practice. You will learn algorithmic techniques for solving various computational problems and will implement more than 200 algorithmic coding problems. This course offers you a wealth of programming challenges that you may face at your next job interview. The course focuses mainly on Data Structure & Algorithms: the key to selection in top product based companies.\par
\par
Key Features of the Course\par
\par
Well organised tutorials on Data-Structures and Algorithms prepared by the GeeksforGeeks Team.\par
Premium video lectures by Mr. Sandeep Jain, Founder and C.E.O of GeeksforGeeks.\par
Dedicated doubt solving team to assist you.\par
Weekly Assessment Tests with Video Solutions.\par
Performance-Based Certificate.\par
Internship Opportunities at GeeksforGeeks.\par
The courses are self-paced: Anyone can register anytime, make payment and begin the course.\par
And, many more.\par
\par
\par
\par
\par
\par
\par
\par
\par
Practice for cracking any coding interview\par
Coding questions in this article are difficulty wise ordered. The idea of this post is to target two types of people.\par
\par
Competitive Programming Preparation (For Ist and IInd Year Students) : It is recommended to finish all questions from all categories except possibly Linked List, Tree and BST. However at least 10 questions from these categories should also be covered. If you have never done competitive programming before, it is strongly recommended to see How to Begin with Competitive Programming first. If you wish to get yourself prepared with a language first, you may first begin C++ Track or Java Track\par
Interview preparation It is recommended to cover all topics. In every every topic, you can start from questions according to your comfort level.\par
The practice system tells you exactly the test case where your code failed. In case you need more clarity about a question, you may use expected output button to see output for your given input. You can also view successful submissions of others in case you are stuck. To see solution of others, please click \ldblquote All Submissions\rdblquote  button at the bottom of problem statement.\par
\par
Topics :\par
\par
Mathematical\par
Puzzles\par
Arrays\par
String\par
Searching\par
Sorting\par
Hashing\par
Matrix\par
Recursion\par
Divide & Conquer\par
Linked List\par
Doubly and Circular Linked Lists\par
Stack\par
Queue\par
Prefix Sum and Sliding Window\par
Bit Magic\par
Tree\par
Binary Search Tree\par
Heap\par
Graph\par
Greedy Algorithms\par
Dynamic Programming\par
Backtracking\par
Trie\par
Misc Topics\par
Important Links\par
Mathematical :\par
\par
Print the pattern (You only need to write function here)\par
Print table (This is a full code problem. Please see sample codes here before attempting the problem)\par
Series AP\par
Series GP\par
Closest Number\par
Armstrong Numbers\par
Sum of digits of a number\par
Reverse digits\par
Print the Kth Digit\par
Binary number to decimal number\par
Jumping Numbers\par
GCD of two numbers\par
LCM of two numbers\par
Add two fractions\par
GCD of array\par
Factorial of a number\par
Compute nPr\par
Compute nCr\par
Largest prime factor\par
Perfect Numbers\par
Pair cube count\par
Find Nth root of M\par
Prime Number\par
Sieve of Eratosthenes\par
Sum of all prime numbers between 1 and N.\par
Pairs of prime numbers\par
Related Learning Resources : Mathematical Algorithms and Number Theory\par
\par
 \par
\par
Puzzles\par
\par
Count Squares\par
3 Divisors\par
Check if four points form a square\par
Check for power\par
Overlapping rectangles\par
Trailing zeroes in factorial\par
Angle between hour and minute hand\par
Number Of Open Doors\par
Triangular Numbers\par
Nth Even Fibonacci Number\par
Last two digit Fibonacci\par
Squares in a Matrix\par
Day of the week\par
Related Learning Resources : Puzzles\par
\par
 \par
\par
Arrays :\par
\par
\par
\par
 \par
\par
Array operations (Search, insert, delete)\par
Array alternate printing\par
Maximum and minimum in an array\par
Second largest in array\par
Sum of array elements\par
Reverse an Array\par
Rotate Array\par
Count of smaller elements\par
Remove duplicate elements from sorted Array\par
Count possible triangles\par
Leaders in an array\par
Minimum distance between two numbers\par
Sorted subsequence of size 3\par
Maximum Sub Array\par
Majority Element\par
Wave Array\par
Maximum Index\par
Max sum path in two arrays\par
Product array puzzle\par
Find duplicates in a small ranged array\par
Find Missing And Repeating\par
Stock buy and sell\par
Trapping Rain Water\par
Pair with given sum in a sorted array\par
Chocolate Distribution Problem\par
Longest Consecutive subsequence\par
Three way partitioning\par
Related Learning Resources : Array Data Structure\par
\par
\par
\par
 \par
\par
String :\par
\par
Check for palindrome\par
Check for anagram\par
Anagram Palindrome\par
Title case conversion\par
Sort the string\par
Merge two strings\par
Save Ironman\par
Good or Bad string\par
URLify a given string\par
Extract Maximum\par
Reverse words in a given string\par
Implement strstr\par
Check for subsequence\par
Check for rotation\par
Check if two strings are k-anagrams\par
Uncommon characters\par
Anagram Search\par
First repeating character\par
First non-repeating character\par
Longest Distinct characters in string\par
Longest Palindromic Substring\par
Find k-th character in string\par
Smallest window in a string containing all characters of another string\par
Add Binary Strings\par
Multiply two Strings\par
Nearest multiple of 10\par
Related Learning Resources : String Data Structure\par
\par
\par
\par
 \par
\par
Searching :\par
\par
Linear Search\par
Facing the sun\par
Magnet Array Problem\par
Binary Search\par
Floor in a Sorted Array\par
Count occurrences in a sorted array\par
Search in a sorted and rotated\par
Find the missing number\par
Missing element of AP\par
Square root of a number\par
Find Transition Point in a Sorted Binary Array\par
Last index of One\par
Peak element\par
Allocate minimum number of pages\par
Common elements in three sorted\par
Smallest Positive missing number\par
Related Learning Resources : Searching Algorithms\par
\par
 \par
\par
Sorting :\par
\par
Check if array is sorted\par
Sort a binary array\par
Sort an array of 0s, 1s and 2s\par
Bubble Sort\par
Insertion Sort\par
Selection Sort\par
Quick Sort\par
Merge Sort\par
Sort an array when two halves are sorted\par
Relative Sorting\par
Triplet Sum in Array\par
Minimum Swaps to Sort\par
Sorting elements by frequency\par
Triplet Family\par
Count the triplets\par
Related Learning Resources : Sorting Algorithms\par
\par
\par
\par
 \par
\par
Hashing :\par
\par
Count distinct elements\par
Array Subset of another array\par
Nuts and Bolts Problem\par
Count frequencies of elements\par
Check if two arrays are equal or not\par
First element to occur k times\par
In First But Second\par
Non-Repeating Element\par
Group Anagrams Together\par
Winner of an election\par
Check for a pair with given sum\par
Count distinct pairs with difference k\par
Count pairs with given sum\par
Find all four sum numbers\par
A Simple Fraction\par
Largest Fibonacci Subsequence\par
Related Learning Resources : Hashing Data Structure\par
\par
 \par
\par
Matrix :\par
\par
Transpose of Matrix\par
Print Matrix in snake Pattern\par
Print a given matrix in spiral form\par
Is Sudoku Valid\par
Count zeros in a sorted matrix\par
Squares in a Matrix\par
A Boolean Matrix Question\par
Search in row-wise and column-wise sorted\par
Find the row with maximum number of 1s\par
Count pairs Sum in matrices\par
Median In a Row-Wise sorted Matrix\par
Related Learning Resources : Matrix Data Structure\par
\par
\par
\par
 \par
\par
Recursion :\par
\par
Print Pattern\par
Handshakes\par
Tower of Hanoi\par
Josephus problem\par
Recursively remove all adjacent duplicates\par
Possible words from Phone digits\par
Flood fill Algorithm\par
Permutations of a string\par
Related Learning Resources : Recursion\par
\par
 \par
\par
Divide & Conquer :\par
\par
Write your own power function\par
Program for n-th Fibonacci Number\par
K-th element of two sorted Arrays\par
Median of two sorted arrays\par
Karatsuba Algorithm\par
The Painter\rquote s Partition Problem\par
Convex Hull\par
Counting inversions\par
Related Learning Resources : Divide and Conquer Algorithms\par
\par
\par
\par
 \par
\par
Linked List :\par
\par
Print a Linked List\par
Length of a linked list\par
Node at a given index in linked list\par
Middle of a linked list\par
n-th node from end of a linked list\par
Delete a node\par
Remove every k\rquote th node\par
Delete N nodes after M nodes of a linked list\par
Delete without head pointer\par
Rearrange a linked list\par
Segregate even and odd (Using only one traversal)\par
Reorder List\par
Polynomial Addition\par
Insert in a Sorted List\par
Swap nodes in pairs\par
Reverse a linked list\par
Reverse a Linked List in groups of given size.\par
Check for palindrome\par
Flattening a linked list\par
Get intersection point\par
Remove duplicates from sorted list\par
Remove duplicates from unsorted lists\par
Sort a linked list of 0s, 1s and 2s.\par
Circular Linked List\par
Detect loop in a linked list\par
Find length of Loop\par
Remove loop in a linked list\par
Add two numbers represented by linked lists\par
Clone a linked list with random pointers\par
Add 1 to a number represented as linked list\par
Add two numbers represented as linked list\par
Multiply two linked lists\par
Merge two sorted linked lists\par
Merge Sort on Linked List\par
Intersection of Two Linked Lists\par
Union of Two Linked Lists\par
Related Learning Resources : Linked List Data Structure\par
\par
\par
\par
 \par
\par
Doubly and Circular Linked Lists\par
\par
Insert a node in Doubly linked list\par
Delete node in Doubly Linked List\par
Circular Linked List Traversal\par
Split a Circular Linked List into two halves\par
Insert in Sorted way in a Sorted DLL\par
QuickSort on Doubly Linked List\par
Merge Sort on Doubly Linked List\par
Rotate doubly Linked List by P nodes\par
XOR Linked List\par
Related Learning Resources : Doubly Linked List and Circular Linked List.\par
\par
 \par
\par
Stack\par
\par
Implement Stack using Array\par
Implement Stack using Linked List\par
Check for balanced parenthesis\par
Reverse a stack\par
Implement two stacks in an array\par
Design a stack with getMin\par
The celebrity problem\par
Stock Span Problem\par
Next Greater Element\par
Next Smaller Element\par
Longest valid Parentheses\par
Related Learning Resources : Stack Data Structure\par
\par
\par
\par
 \par
\par
Queue and Dequeue\par
\par
Implement Queue using Linked List\par
Implement Queue using Array\par
Implement Stack using Queue\par
Implement Queue using Stack\par
Reversing a Queue\par
Circular tour\par
Related Learning Resources : Queue Data Structure\par
\par
First non-repeating character in a stream\par
 \par
\par
Prefix Sum and Sliding Window\par
\par
Equilibrium Point\par
Check if there is a subarray with 0 sun\par
Longest Sub-Array with Sum K\par
Longest subarray with sum divisible by K\par
Largest subarray with equal 1s and 0s\par
Longest common span with same number of 1s and 0s among two arrays\par
Find mximum sum in any subarray of size k\par
Count distinct elements in every window of size k\par
Check for subarray with given sum\par
Related Learning Resources : Prefix Sum and Sliding Window\par
\par
Bit Magic\par
\par
Check if a number is even or odd.\par
Number of bit flips\par
Game of XOR\par
Find bit at a position\par
Swap odd and even bits\par
Power of 2\par
Odd occurring element\par
Missing number in array\par
Index Of an Extra Element\par
Reverse Bits\par
Count set bits\par
Power Set\par
Related Learning Resources : Bit Magic\par
\par
\par
\par
 \par
\par
Tree\par
\par
Inorder Traversal\par
Preorder Traversal\par
Postorder Traversal\par
Level order traversal\par
Find height of Binary Tree\par
Count Leaves in Binary Tree\par
Check for Children Sum Property\par
Mirror Tree\par
Check for Balanced Tree\par
Lowest Common Ancestor in a Binary Tree\par
Diameter of Binary Tree\par
Left View of Binary Tree\par
Right View of Binary Tree\par
Maximum path sum\par
Level order traversal line by line\par
Tree from Postorder and Inorder\par
Tree from Preorder and Inorder\par
Connect Nodes at Same Level\par
Zig-Zag level order traversal\par
Serialize and Deserialize a Binary Tree\par
Leaves to DLL\par
Binary Tree to Doubly Linked List\par
Binary Tree to Circular Doubly Linked List\par
Related Learning Resources : Tree Data Structure\par
\par
\par
\par
 \par
\par
Binary Search Tree\par
\par
BST Search\par
BST Insert\par
BST Delete\par
Minimum in BST\par
Inorder Traversal and BST\par
Count BST nodes that lie in a given range\par
Add all greater values\par
Predecessor and Successor in BST\par
Closest Neighbor in BST\par
Lowest Common Ancestor in a BST\par
Convert Level Order Traversal to BST\par
Normal BST to Balanced BST\par
Pair with given sum in BST\par
Check for BST\par
Correct BST with two nodes swapped\par
Median of BST\par
k-th smallest element in BST\par
Unique BST\rquote s\par
Array to BST\par
Preorder Traversal and BST\par
Preorder to Postorder\par
Leaf nodes from preorder traversal\par
Triplet with 0 sum in BST\par
Merge two BST \lquote s\par
Largest BST Subtree\par
Related Learning Resources : Binary Search Tree\par
\par
\par
\par
 \par
\par
Heap\par
\par
Binary Heap Operations\par
Height of Heap\par
Heap Sort\par
Sort a Nearly Sorted Array\par
K Largest Elements\par
K-th largest element in a stream\par
Median of stream\par
Merge k sorted arrays\par
Related Learning Resources : Heap Data Structure\par
\par
 \par
\par
Graph\par
\par
Print adjacency list\par
Breadth First Search\par
Depth First Search\par
Find whether path exist\par
Knight Walk\par
Snake and Ladder Problem\par
Bipartite Graph\par
Detect Cycle in an undirected graph\par
Detect Cycle in a directed graph\par
Find first n numbers with given set of digits\par
Rotten oranges\par
Topological sort\par
Shortest Source to Destination Path\par
Transitive closure of a Graph\par
Strongly Connected Components\par
Related Learning Resources : Graph Data Structure\par
\par
 \par
\par
Greedy Algorithms\par
\par
Fractional Knapsack\par
Largest number with given sum\par
Activity Selection\par
N meetings in one room\par
Minimum Platforms\par
Minimum number of Coins\par
Job Sequencing Problem\par
Minimize the heights\par
Huffman Coding\par
Huffman Decoding\par
Minimum Spanning Tree\par
Dijkstra for Adjacency Matrix\par
Related Learning Resources : Greedy Algorithms\par
\par
\par
\par
 \par
\par
Dynamic Programming\par
\par
Print first n Fibonacci Numbers.\par
Count ways to reach the n\rquote th stair\par
Cutted Segments\par
Kadane\rquote s Algorithm\par
Stickler Thief\par
Minimum number of jumps\par
Total Decoding Messages\par
Min Cost Path\par
Coin Change\par
Longest Common Subsequence\par
Consecutive 1\rquote s not allowed\par
Edit Distance\par
Rod Cutting\par
Water Overflow\par
Maximum Tip Calculator\par
Longest Increasing Subsequence\par
Maximum sum increasing subsequence\par
Max length chain\par
0 \endash  1 Knapsack Problem\par
Maximum Tip Calculator\par
Interleaved string\par
Longest Palindromic Subsequence\par
Wildcard Pattern Matching\par
Box Stacking\par
Longest Bitonic subsequence\par
Minimum sum partition\par
Largest square formed in a matrix\par
Word Break\par
Matrix Chain Multiplication\par
Special Keyboard\par
Egg Dropping Puzzle\par
Optimal Strategy for a Game\par
Related Learning Resources : Dynamic Programming\par
\par
Backtracking\par
\par
Rat Maze With Multiple Jumps\par
Coins and Game\par
Hamiltonian Path\par
Solve the Sudoku\par
Combination Sum \endash  Part 2\par
Combination Sum\par
Subsets\par
Largest number in K swaps\par
M-Coloring Problem\par
Black and White\par
Related Learning Resources : Backtracking\par
\par
\par
\par
 \par
\par
Trie\par
\par
Trie Search and Insert\par
Trie Delete\par
Unique rows in a binary matrix\par
Count of distinct substrings\par
Word Boggle\par
Related Learning Resources : Trie Data Structure\par
\par
 \par
\par
Misc Questions to test your overall learning\par
\par
Longest common prefix\par
Implement Atoi\par
Two numbers with sum closest to zero\par
Smallest greater elements in whole array\par
Max rectangle\par
Find triplets with zero sum\par
Counting elements in two arrays\par
Merge K sorted linked lists\par
Maximum Difference\par
Circle of strings\par
All possible Word Breaks\par
Alien Dictionary\par
Design a tiny URL or URL shortener\par
Implement LRU Cache\par
\par
\par
\par
\par
\par
\par
How to attempt Function Coding Questions?\par
Function Coding Questions are similar to normal coding questions apart from the fact that one does not need to read input and print output from standard I/O while writing solutions.\par
\par
In function coding question, one just needs to complete a function already written in the code editor. You need to work on inputs provided as a parameter to this function and instead of printing the result you will have to return it from the function.\par
\par
Let\rquote s take the example of a sample function problem: Equilibrium Index of an Array. The pattern of question is almost the same as that of normal programming questions. In function problems, you can notice an additional information provided as \ldblquote Task\rdblquote  after the output format which clearly explains that the user only needs to complete a function and return the result from it.\par
\par
\par
\par
 \par
\par
\par
You can also see that in the code editor for this question there is already a function written with name findEquilibrium().\par
\par
\par
This function accepts an array A[] and an integer n which denotes the size of the array A[]. You can see in the above image that the body of this function is empty. You need to write your complete code inside the body of this function and return the result from it without writing a separate main() function. You must assume that there is already a main() function written which is invoking this function and write your program accordingly.\par
\par
Below is the complete working solution for the above question:\par
\par
filter_none\par
brightness_4\par
/*Please note that it's Function problem i.e. \par
you need to write your solution in the form of Function(s) only. \par
Driver Code to call/invoke your function is mentioned above.*/\par
  \par
/* You are required to complete this method*/\par
int findEquilibrium(int A[], int n) \par
\{ \par
    // Your code here \par
    int i, y, f, j, x; \par
    for (i = 1; i < n; i++) \{ \par
        y = 0; \par
        x = 0; \par
        for (j = 0; j < i; j++) \{ \par
            y = y + A[j]; \par
        \} \par
        for (j = i + 1; j < n; j++) \{ \par
            x = x + A[j]; \par
        \} \par
        if (x == y) \{ \par
            f = 1; \par
  \par
            // returning answer \par
            return (i); \par
            break; \par
        \} \par
        else \{ \par
            f = 0; \par
        \} \par
    \} \par
    if (f == 0) \{ \par
        // returning answer \par
        return (-1); \par
    \} \par
\} \par
Important things to remember\par
\par
One should assume that a main() function is already present which is invoking the current function and should not write a separate main() function.\par
Use inputs as provided in the function parameters.\par
Return result from the function instead of printing it.\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
How to face Infosys Interview?\par
First of all, I would like to thank GeeksforGeeks! Without their guidance, surely it would have been a tough task for me to clear Infosys interview.\par
\par
Round 1: Online Assessment-Before starting, look at the company specific pattern in GeeksforGeeks site. They have already mentioned everything very clearly. Analyze your strengths and weakness. Prepare the topics in which you need to improve yourself. Everything is based on sectional cutoff. Just spend few hours daily and it will be easy to crack the round 1.\par
\par
Round 2: Technical Interview-Good communication and positive attitude is all that you require to clear this round. I was the first one to enter the Technical interview panel and felt bit nervous at the beginning. Answered all the questions clearly with required explanation. Few questions were bit tricky but be honest to accept if you are not aware about the answer. Practice coding in Geeksforgeeks and Hackerrank. Make sure that you are aware about everything that you have mentioned in your resume. Most of the questions will be asked only from the resume and be smart enough. Eye contact and body language is very important. Be Bold.\par
\par
\par
\par
 \par
\par
Round 3: HR Interview-After clearing first 2 rounds, you can be confident enough because you are going to be the future Infoscion. Be flexible, polite and have a nice conversation with HR.  All the Best Guys!\par
\f0\par
}
 